name: UAV Assessment CI
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  DOCKER_IMAGE: uav-assessment-env:ci

jobs:
  sim-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build container
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Debug step - kontrol et
      - name: Test Discovery Debug
        run: |
          docker run --rm -t $DOCKER_IMAGE bash -c '
            cd /ros2_ws
            echo "=== Test klasör yapısı ==="
            find . -name "test_*.py" -type f
            echo "=== Package.xml kontrol ==="
            cat src/src/test_package/package.xml
            echo "=== Setup.py kontrol ==="
            cat src/src/test_package/setup.py
          '

      # ---------- TASK 1 ----------
      - name: Run Task 1 – Arm/Disarm
        id: task1
        continue-on-error: true  # NotImplementedError için devam et
        run: |
          docker run --rm -t $DOCKER_IMAGE bash -c '
            set -e
            cd /ros2_ws
            colcon build --symlink-install
            source install/setup.bash
            colcon test --packages-select test_package \
                       --event-handlers console_direct+ \
                       --pytest-args "--launch-testing" \
                       --pytest-args "-s" \
                       --pytest-args "-v" \
                       --pytest-args "-k test_arm_disarm"
            colcon test-result --verbose
          '

      # ---------- TASK 2 ----------
      - name: Run Task 2 – Take-off/Land
        id: task2
        continue-on-error: true  # NotImplementedError için devam et
        run: |
          docker run --rm -t $DOCKER_IMAGE bash -c '
            set -e
            cd /ros2_ws
            source install/setup.bash
            colcon test --packages-select test_package \
                       --event-handlers console_direct+ \
                       --pytest-args "--launch-testing" \
                       --pytest-args "-s" \
                       --pytest-args "-v" \
                       --pytest-args "-k test_takeoff_land"
            colcon test-result --verbose
          '

      # ---------- Summary ----------
      - name: Generate summary
        if: always()
        run: |
          {
            echo '## 📝 UAV Assessment Raporu'
            echo
            case "${{ steps.task1.outcome }}" in
              "success") echo '### ✅ Task 1 (Arm/Disarm) PASS' ;;
              "failure") echo '### ❌ Task 1 (Arm/Disarm) FAIL - NotImplementedError bekleniyor' ;;
              *) echo '### ⚠️ Task 1 (Arm/Disarm) UNKNOWN' ;;
            esac
            case "${{ steps.task2.outcome }}" in
              "success") echo '### ✅ Task 2 (Take-off/Land) PASS' ;;
              "failure") echo '### ❌ Task 2 (Take-off/Land) FAIL - NotImplementedError bekleniyor' ;;
              *) echo '### ⚠️ Task 2 (Take-off/Land) UNKNOWN' ;;
            esac
          } >> "$GITHUB_STEP_SUMMARY"