name: UAV Assessment CI

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE: uav-assessment-env:latest   # tek yerde değiştir, her yerde geçerli

jobs:
  test:
    name: Run Simulation Tests
    runs-on: ubuntu-latest

    steps:
    # 1) Repo’yu çek
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2) Buildx ve cache
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3) Docker imajını build et (cache’i GHA’de tut)
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: ${{ env.DOCKER_IMAGE }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max

    # ---------- TEST 1 ----------
    - name: Run Task 1 Test – Arm/Disarm
      id: task1
      run: |
        docker run --rm -t $DOCKER_IMAGE bash -c '
          set -eo pipefail
          source /opt/ros/humble/setup.bash
          set -u
          cd /root/ros2_ws
          rm -rf build install log
          colcon build --symlink-install
          colcon test --packages-select test_package \
                      --event-handlers console_direct+ \
                      --return-code-on-test-failure
          colcon test-result --verbose
        '

    # ---------- TEST 2 ----------
    - name: Run Task 2 Test – Takeoff/Land
      id: task2
      run: |
        docker run --rm -t $DOCKER_IMAGE bash -c '
          set -eo pipefail
          source /opt/ros/humble/setup.bash
          set -u
          cd /root/ros2_ws
          rm -rf build install log
          colcon build --symlink-install
          colcon test --packages-select test_package \
                      --event-handlers console_direct+ \
                      --return-code-on-test-failure
          colcon test-result --verbose
        '

    # ---------- ÖZET ----------
    - name: Generate Assessment Report
      if: always()           # testler patlasa da çalış
      run: |
        echo "## 📝 Aday Değerlendirme Raporu" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY

        if [[ "${{ steps.task1.outcome }}" == "success" ]]; then
          echo "### ✅ Görev 1: Arm/Disarm Başarılı" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Görev 1: Arm/Disarm Başarısız" >> $GITHUB_STEP_SUMMARY
        fi

        if [[ "${{ steps.task2.outcome }}" == "success" ]]; then
          echo "### ✅ Görev 2: Otonom Kalkış/İniş Başarılı" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Görev 2: Otonom Kalkış/İniş Başarısız" >> $GITHUB_STEP_SUMMARY
        fi
